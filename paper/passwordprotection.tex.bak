\section{Password Protection}
\label{passwordprotection}
After showing that user passwords are even more guessable with their personal information available, we wonder how could users protect their passwords. It is commonly believed that there is trade-off between password usability and password security. A secure password would usually be less memorable because it is expected to be long and random. However, people are bothered to remember secure passwords so the usability of secure passwords is low. In this work we do not propose authentication method to break the conventional password authentication frame. In stead we seek an easy way to make passwords more secure while maintain acceptable memorability.

\subsection{Distortion Function}
We realize that make users to remember passwords that are totally irrelevant to users is infeasible because users have the right to choose their passwords. Although most users concern their password security, many of them would not sacrifice password usability for security. Therefore we introduce distortion function, which adds a function on user own-chosen passwords. This distortion function can be chosen by users. It could be linear or non-linear. After applying the distortion function, user passwords are mapped to another string. 

We conducted a proof-of-concept study to show the effectiveness of distortion function on password security. In our study, we use 2 simple linear functions. 

For the first distortion function, every password symbols is replaced by the incremented symbol. It is simply $S = S + 1$. For example, "a" will be replaced by "b", "b" will be replaced by "c", and "z" will be replaced by "a", etc. Digits work similarly -- "1" is replaced by "2" and "9" is replaced by "0". However, as there is no explicit order for special characters, we keep them unchanged. We call this distortion function D1.

The second distortion function adds an "a" between any pair of symbols. The length of passwords become twice of the original password minus 1. For example, Alice's password "alice816" will be "aalaiacaea8a1a6" after the distortion function. We call this distortion function D2.

Note that users could choose their own distortion function, the distortion function we used is some of the simplest. After applying the distortion functions on each of the password in 12306 dataset. We again calculate the Coverage. This time the average Coverage for the dataset is 0.075 for D1 and only 0.009 for D2. The cumulative probability distributions for both D1 and D2 are shown in Figure~\ref{f4}. 


We can see that a simple distortion function would greatly reduce the correlation between user passwords and personal information. Therefore distortion function mitigates the problem of vast usage of personal information in user passwords. What is more, distortion function is also cure for semantics and syntax aware password cracking methods, for example, [NDSS14] proposed in 2014, which leverages semantic patterns in passwords to crack other passwords. After applying a distortion function, the semantic pattern would no longer be available, thus make the passwords secure against such attacks. Even for context-free password cracker like PCFG method, distortion function is effective because distortion function makes dictionary words unrecognizable strings, which are not covered in commonly-used password dictionaries. 

From our 2 example distortion functions, we also found that the selection of distortion function makes big difference. D1 and D2 have their own advantages and disadvantages. D2 works better in reducing correlation between passwords and personal information because the average coverage of D2 is merely 12\% of D1. However, D2 is a more obvious method which can be detected easily by an attacker. To sum up, users can choose their distortion function based on their needs. 

The main weakness of distortion function is that it has to be kept secret. If an attacker knows the distortion function of a user, cracking the user's password is as easy as cracking a plain password. However, as users choose their own distortion functions, it is hard for attackers to know which one is used. Beside attacking a specific target, attacking a large dataset also becomes harder because various distortion functions exist, making the passwords in the dataset sparser and more unpredictable, which are not good news for attackers.
 
 \begin{figure}[h!]
\centering
  \caption{Coverage distribution.}{}
  \label{f4}
  \centering
    \includegraphics[width=0.5\textwidth]{fig/dist2}
\end{figure}



